{
  "openapi": "3.0.3",
  "info": {
    "title": "Hyperledger Cactus Plugin - Connector Iroha V2",
    "description": "Can perform basic tasks on a Iroha V2 ledger",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "components": {
    "schemas": {
      "IrohaCommand": {
        "type": "string",
        "enum": [
          "createDomain"
        ],
        "x-enum-descriptions": [
          "Add new domain"
        ],
        "x-enum-varnames": [
          "CreateDomain"
        ]
      },
      "IrohaQuery": {
        "type": "string",
        "enum": [
          "findAllDomains"
        ],
        "x-enum-descriptions": [
          "To get the state of a domain"
        ],
        "x-enum-varnames": [
          "FindAllDomains"
        ]
      },
      "Iroha2AccountId": {
        "type": "object",
        "additionalProperties": false,
        "nullable": false,
        "required": [
          "name",
          "domainId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "nullable": false
          },
          "domainId": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "Iroha2KeyJson": {
        "type": "object",
        "additionalProperties": false,
        "nullable": false,
        "required": [
          "digestFunction",
          "payload"
        ],
        "properties": {
          "digestFunction": {
            "type": "string",
            "nullable": false
          },
          "payload": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "KeychainReference": {
        "type": "object",
        "required": [
          "keychainId",
          "keychainRef"
        ],
        "properties": {
          "keychainId": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "nullable": false
          },
          "keychainRef": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "nullable": false
          }
        }
      },
      "Iroha2KeyPair": {
        "type": "object",
        "required": [
          "privateKey",
          "publicKey"
        ],
        "properties": {
          "privateKey": {
            "$ref": "#/components/schemas/Iroha2KeyJson",
            "nullable": false
          },
          "publicKey": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "Iroha2BaseConfigTorii": {
        "type": "object",
        "additionalProperties": false,
        "nullable": false,
        "properties": {
          "apiURL": {
            "type": "string",
            "nullable": false
          },
          "telemetryURL": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "Iroha2BaseConfigTransaction": {
        "type": "object",
        "additionalProperties": false,
        "nullable": false,
        "properties": {
          "timeToLiveMs": {
            "type": "string",
            "nullable": false
          },
          "addNonce": {
            "type": "boolean",
            "nullable": false
          }
        }
      },
      "Iroha2BaseConfig": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "torii"
        ],
        "properties": {
          "torii": {
            "$ref": "#/components/schemas/Iroha2BaseConfigTorii",
            "nullable": false
          },
          "accountId": {
            "$ref": "#/components/schemas/Iroha2AccountId",
            "nullable": false
          },
          "signingCredential": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Iroha2KeyPair",
                "nullable": false
              },
              {
                "$ref": "#/components/schemas/KeychainReference",
                "nullable": false
              }
            ]
          },
          "transaction": {
            "$ref": "#/components/schemas/Iroha2BaseConfigTransaction",
            "nullable": false
          }
        }
      },
      "TransactRequestV1": {
        "type": "object",
        "required": [
          "commandName",
          "params"
        ],
        "additionalProperties": false,
        "properties": {
          "commandName": {
            "type": "IrohaCommand",
            "nullable": false
          },
          "baseConfig": {
            "$ref": "#/components/schemas/Iroha2BaseConfig",
            "nullable": false
          },
          "params": {
            "description": "The list of arguments to pass in to the transaction request.",
            "type": "array",
            "items": {}
          }
        }
      },
      "TransactResponseV1": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "QueryRequestV1": {
        "type": "object",
        "required": [
          "queryName"
        ],
        "additionalProperties": false,
        "properties": {
          "queryName": {
            "type": "IrohaQuery",
            "nullable": false
          },
          "baseConfig": {
            "$ref": "#/components/schemas/Iroha2BaseConfig",
            "nullable": false
          },
          "params": {
            "description": "The list of arguments to pass in to the query request.",
            "type": "array",
            "items": {}
          }
        }
      },
      "QueryResponseV1": {
        "type": "object",
        "required": [
          "response"
        ],
        "properties": {
          "response": {
            "nullable": false
          }
        }
      },
      "ErrorExceptionResponseV1": {
        "type": "object",
        "required": [
          "message",
          "error"
        ],
        "properties": {
          "message": {
            "type": "string",
            "nullable": false
          },
          "error": {
            "type": "string",
            "nullable": false
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha2/transact": {
      "post": {
        "x-hyperledger-cactus": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha2/transact"
          }
        },
        "operationId": "TransactV1",
        "summary": "Executes a transaction on a Iroha V2 ledger",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactResponseV1"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorExceptionResponseV1"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha2/query": {
      "post": {
        "x-hyperledger-cactus": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha2/query"
          }
        },
        "operationId": "QueryV1",
        "summary": "Executes a query on a Iroha V2 ledger",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponseV1"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorExceptionResponseV1"
                }
              }
            }
          }
        }
      }
    }
  }
}