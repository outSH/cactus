{
  "openapi": "3.0.3",
  "info": {
    "title": "Hyperledger Cactus Plugin - Connector Iroha V2",
    "description": "Can perform basic tasks on a Iroha V2 ledger",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "components": {
    "schemas": {
      "IrohaCommand": {
        "type": "string",
        "enum": [
          "createDomain"
        ],
        "x-enum-descriptions": [
          "Add new domain"
        ],
        "x-enum-varnames": [
          "CreateDomain"
        ]
      },
      "IrohaQuery": {
        "type": "string",
        "enum": [
          "getDomain"
        ],
        "x-enum-descriptions": [
          "To get the state of a domain"
        ],
        "x-enum-varnames": [
          "GetDomain"
        ]
      },
      "IrohaBaseConfig": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "irohaHost": {
            "type": "string",
            "nullable": false
          },
          "irohaPort": {
            "type": "number",
            "nullable": false
          },
          "creatorAccountId": {
            "type": "string",
            "nullable": false
          },
          "privKey": {
            "type": "array",
            "items": {},
            "default": [],
            "nullable": false
          },
          "quorum": {
            "type": "number",
            "nullable": false
          },
          "timeoutLimit": {
            "type": "number",
            "nullable": false
          },
          "tls": {
            "type": "boolean",
            "nullable": false,
            "description": "Can only be set to false for an insecure grpc connection."
          }
        }
      },
      "TransactRequestV1": {
        "type": "object",
        "required": [
          "commandName",
          "baseConfig",
          "params"
        ],
        "additionalProperties": false,
        "properties": {
          "commandName": {
            "type": "string",
            "nullable": false
          },
          "baseConfig": {
            "$ref": "#/components/schemas/IrohaBaseConfig",
            "nullable": false
          },
          "params": {
            "description": "The list of arguments to pass in to the transaction request.",
            "type": "array",
            "items": {}
          }
        }
      },
      "TransactResponse": {
        "type": "object",
        "required": [
          "transactionReceipt"
        ],
        "properties": {
          "transactionReceipt": {}
        }
      },
      "ErrorExceptionResponseV1": {
        "type": "object",
        "required": [
          "message",
          "error"
        ],
        "properties": {
          "message": {
            "type": "string",
            "nullable": false
          },
          "error": {
            "type": "string",
            "nullable": false
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha2/transact": {
      "post": {
        "x-hyperledger-cactus": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha2/transact"
          }
        },
        "operationId": "TransactV1",
        "summary": "Executes a transaction on a Iroha V2 ledger",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorExceptionResponseV1"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorExceptionResponseV1"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorExceptionResponseV1"
                }
              }
            }
          }
        }
      }
    }
  }
}
